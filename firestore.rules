// Reglas de Firestore actualizadas
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    match /{document=**} {
      allow read, write: if true; // Permiso temporal para pruebas locales
    }
  
   
     // Reglas para la colección socios
    match /socios/{docId} {
      allow read, write: if request.auth != null;
    }  
  
   match /financialSocios/{docId} {
      allow read, write: if request.auth != null;
    }
    match /financialDonaciones/{docId} {
      allow read, write: if request.auth != null;
    }
    match /financialUsers/{docId} {
      allow read, write: if request.auth != null;
    }
    match /financialRamadan/{docId} {
      allow read, write: if request.auth != null;
    }
    
    match /financialViernes/{docId} {
      allow read, write: if request.auth != null;
    }

    // Reglas para la colección donations
    match /donations/{document} {
      // Solo los usuarios autenticados pueden leer y escribir en la colección
      allow read, write: if request.auth != null;
    }

  

    // Regla para chat-escuela: solo usuarios autenticados y activos pueden acceder
    match /chat-escuela/{message} {
      allow read, write: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isActive == true;
    }

  // Regla para solicitudes de acceso a la escuela: crear solicitudes y permitir lectura solo para admins
    match /schoolAccessRequests/{requestId} {
      allow create: if request.auth != null;
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
     


    // Regla para el contenido de la escuela
    match /schoolContent/{contentId} {
  allow read: if request.auth != null &&
    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isApproved == true;
  allow write: if request.auth != null &&
    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
}

    
    
     // Regla para testimonios
     match /testimonios/{document} {
      allow read: if true;  // Todos pueden leer los testimonios
      allow create: if request.auth != null;  // Solo usuarios autenticados pueden crear testimonios
    }
    
   
   // Reglas para la colección 'articulos'
    match /articulos/{document} {
      allow read: if resource.data.estado == "aprobado" || 
                  (request.auth != null && 
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin");
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

   

    // Reglas para la colección 'users'
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && 
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    
     // Reglas para la colección de eventos
    match /eventos/{eventoId} {
    allow read: if resource.data.estado == true || 
        (request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin");
    
    allow create, update, delete: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";

    // Validación adicional para evitar errores si 'resource.data.estado' no existe
    allow read: if resource.data.keys().hasAll(['estado']) &&
        (resource.data.estado == true || 
        (request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin"));
}


// Reglas para la colección 'multimedia'
    match /multimedia/{document} {
      allow read: if resource.data.estado == "aprobado" || 
                  (request.auth != null && 
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin");
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }
    
    match /servicios/{servicioId} {
    allow read: if true; // Todos pueden leer
    allow create, update: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin" &&
        request.resource.data.nombre is string &&
        request.resource.data.descripcion is string &&
        (request.resource.data.estado == true || request.resource.data.estado == false) &&
        request.resource.data.imagenUrl.matches('^https?://.+') && // Verifica que imagenUrl sea una URL
        request.resource.data.fechaCreacion is timestamp;
    allow delete: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
}



  match /studentSubmissions/{docId} {
  allow read: if request.auth != null;
  allow create: if request.auth != null;  // Permitir que cualquier usuario autenticado envíe
  allow update, delete: if request.auth != null && 
    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
}

    
  }
}




